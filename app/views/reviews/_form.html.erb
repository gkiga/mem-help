<%# form for making new review--new review forms are either automatically populated for student 
after closure of request or can be voluntarily undertaken when reviewing another user's posted video(s)%>
<%= form_with model: review, url: reviews_path,class: "shadow p-5 mb-10 bg-info", method: :post, local: true, scope: :review do |f| %>
  <% if review.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(review.errors.count, "error") %> prohibited this review from being saved:</h2>

      <ul>
        <% review.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <br>
 <div class="form-group row">
    <label><strong for="exampleFormControlInput1">Ratings</strong></label>
    <%=  f.number_field :rating, min: 1 , max: 5, placeholder:'Required numbers...',class: "form-control shadow" %>
  </div>
  
  <div class="form-group row">
  <label><strong for="exampleFormControlTextarea1">Comments</strong></label>
     <%= f.text_area :comment, placeholder:  'Say something...',rows:10, class: "form-control shadow"  %>
   </div>
 
  <div class="form-group">
    <%= f.submit"Submit Review", :class => "btn btn-outline-warning" %>
  
    <%= link_to 'Back To My Page', user_path(current_user), class: "btn btn-outline-warning" %> 
  </div>
  <%= f.hidden_field :user_id, :value => params[:user_id] %>
  <%= f.hidden_field :vkey, :value => params[:vkey]%>
<% end %>
